openapi: 3.0.3
info:
  title: Ad Platform API
  version: 0.1.0
servers:
  - url: http://localhost:5000/api
paths:
  /auth/login:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /auth/register:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string }
                name: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /auth/refresh:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /users/me:
    get:
      security: [{ bearerAuth: [] }]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /ads:
    get:
      security: [{ bearerAuth: [] }]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/AdItem' }
    post:
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/AdItem' }
      responses:
        '200': { description: Created }
  /ads/{id}:
    put:
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/AdItem' }
      responses:
        '200': { description: OK }
    delete:
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: No Content }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TokenResponse:
      type: object
      properties:
        accessToken: { type: string }
        refreshToken: { type: string }
        expiresIn: { type: integer }
    UserProfile:
      type: object
      properties:
        id: { type: string }
        email: { type: string }
        name: { type: string }
        role: { type: string, enum: [user, admin] }
        tenantId: { type: string }
        avatarUrl: { type: string }
        plan: { type: string, enum: [free, pro, enterprise] }
    AdVariant:
      type: object
      properties:
        id: { type: string }
        title: { type: string }
        body: { type: string }
        imageUrl: { type: string }
        isActive: { type: boolean }
    AdItem:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        status: { type: string, enum: [draft, scheduled, active, paused, archived] }
        scheduleAt: { type: string, format: date-time }
        variants:
          type: array
          items: { $ref: '#/components/schemas/AdVariant' }
